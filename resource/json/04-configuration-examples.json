{
  "title": "Configuration Examples",
  "description": "JSON used for application configuration files",

  "databaseConfig": {
    "development": {
      "database": "myapp_dev",
      "host": "localhost",
      "port": 5432,
      "username": "dev_user",
      "password": "dev_password",
      "dialect": "postgresql",
      "logging": true,
      "pool": {
        "max": 5,
        "min": 0,
        "acquire": 30000,
        "idle": 10000
      }
    },
    "test": {
      "database": "myapp_test",
      "host": "localhost",
      "port": 5432,
      "username": "test_user",
      "password": "test_password",
      "dialect": "postgresql",
      "logging": false
    },
    "production": {
      "database": "myapp_prod",
      "host": "prod-db.example.com",
      "port": 5432,
      "username": "prod_user",
      "password": "${DB_PASSWORD}",
      "dialect": "postgresql",
      "logging": false,
      "ssl": true,
      "pool": {
        "max": 20,
        "min": 5,
        "acquire": 60000,
        "idle": 10000
      }
    }
  },

  "serverConfig": {
    "server": {
      "host": "localhost",
      "port": 3000,
      "protocol": "http"
    },
    "cors": {
      "origin": ["http://localhost:4200", "https://myapp.com"],
      "credentials": true,
      "methods": ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    },
    "rateLimit": {
      "windowMs": 900000,
      "maxRequests": 100,
      "message": "Too many requests, please try again later"
    },
    "jwt": {
      "secret": "${JWT_SECRET}",
      "expiresIn": "1h",
      "issuer": "myapp.com",
      "audience": "myapp-users"
    },
    "email": {
      "service": "gmail",
      "host": "smtp.gmail.com",
      "port": 587,
      "secure": false,
      "auth": {
        "user": "${EMAIL_USER}",
        "pass": "${EMAIL_PASSWORD}"
      }
    },
    "redis": {
      "host": "localhost",
      "port": 6379,
      "password": "${REDIS_PASSWORD}",
      "db": 0,
      "retryDelayOnFailover": 100,
      "maxRetriesPerRequest": 3
    }
  },

  "packageJson": {
    "name": "my-awesome-app",
    "version": "1.0.0",
    "description": "An awesome web application",
    "main": "index.js",
    "scripts": {
      "start": "node index.js",
      "dev": "nodemon index.js",
      "test": "jest",
      "build": "webpack --mode production",
      "lint": "eslint .",
      "format": "prettier --write ."
    },
    "dependencies": {
      "express": "^4.18.2",
      "mongoose": "^7.5.0",
      "jsonwebtoken": "^9.0.2",
      "bcryptjs": "^2.4.3",
      "cors": "^2.8.5",
      "dotenv": "^16.3.1"
    },
    "devDependencies": {
      "nodemon": "^3.0.1",
      "jest": "^29.6.2",
      "eslint": "^8.47.0",
      "prettier": "^3.0.1",
      "webpack": "^5.88.2"
    },
    "keywords": ["node", "express", "api", "mongodb"],
    "author": {
      "name": "Your Name",
      "email": "your.email@example.com",
      "url": "https://yourwebsite.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/yourusername/my-awesome-app.git"
    },
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=8.0.0"
    }
  },

  "eslintConfig": {
    "env": {
      "browser": true,
      "es2021": true,
      "node": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended",
      "@typescript-eslint/recommended",
      "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "plugins": ["@typescript-eslint"],
    "rules": {
      "indent": ["error", 2],
      "linebreak-style": ["error", "unix"],
      "quotes": ["error", "single"],
      "semi": ["error", "always"],
      "no-unused-vars": "warn",
      "no-console": "warn"
    },
    "ignorePatterns": ["dist/", "node_modules/", "*.min.js"]
  },

  "dockerConfig": {
    "version": "3.8",
    "services": {
      "app": {
        "build": {
          "context": ".",
          "dockerfile": "Dockerfile"
        },
        "ports": ["3000:3000"],
        "environment": {
          "NODE_ENV": "production",
          "DATABASE_URL": "${DATABASE_URL}",
          "JWT_SECRET": "${JWT_SECRET}"
        },
        "depends_on": ["database", "redis"]
      },
      "database": {
        "image": "postgres:15",
        "environment": {
          "POSTGRES_DB": "myapp",
          "POSTGRES_USER": "postgres",
          "POSTGRES_PASSWORD": "${DB_PASSWORD}"
        },
        "volumes": ["postgres_data:/var/lib/postgresql/data"],
        "ports": ["5432:5432"]
      },
      "redis": {
        "image": "redis:7-alpine",
        "ports": ["6379:6379"],
        "command": "redis-server --requirepass ${REDIS_PASSWORD}"
      }
    },
    "volumes": {
      "postgres_data": {}
    }
  },

  "angularConfig": {
    "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
    "version": 1,
    "newProjectRoot": "projects",
    "projects": {
      "my-app": {
        "projectType": "application",
        "schematics": {
          "@schematics/angular:component": {
            "style": "scss"
          }
        },
        "root": "",
        "sourceRoot": "src",
        "prefix": "app",
        "architect": {
          "build": {
            "builder": "@angular-devkit/build-angular:browser",
            "options": {
              "outputPath": "dist/my-app",
              "index": "src/index.html",
              "main": "src/main.ts",
              "polyfills": "src/polyfills.ts",
              "tsConfig": "tsconfig.app.json",
              "assets": ["src/favicon.ico", "src/assets"],
              "styles": ["src/styles.scss"],
              "scripts": []
            }
          },
          "serve": {
            "builder": "@angular-devkit/build-angular:dev-server",
            "options": {
              "port": 4200,
              "host": "localhost"
            }
          },
          "test": {
            "builder": "@angular-devkit/build-angular:karma",
            "options": {
              "main": "src/test.ts",
              "polyfills": "src/polyfills.ts",
              "tsConfig": "tsconfig.spec.json",
              "karmaConfig": "karma.conf.js"
            }
          }
        }
      }
    }
  },

  "vscodeSettings": {
    "editor.fontSize": 14,
    "editor.tabSize": 2,
    "editor.wordWrap": "on",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    },
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000,
    "files.exclude": {
      "**/node_modules": true,
      "**/dist": true,
      "**/.git": true
    },
    "emmet.includeLanguages": {
      "javascript": "javascriptreact",
      "typescript": "typescriptreact"
    },
    "terminal.integrated.defaultProfile.windows": "Command Prompt",
    "workbench.colorTheme": "Dark+ (default dark)",
    "extensions.autoUpdate": true
  }
}
